/**
 * Tencent is pleased to support the open source community by making Tars available.
 *
 * Copyright (C) 2016THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use this file except 
 * in compliance with the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed 
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations under the License.
 */

module tars
{

/*
* local auth
*/
struct BasicAuthInfo 
{ 
    1 optional string sObjName; 
    2 optional string sAccessKey; // AK 
    3 optional string sSecretKey; // SK plainText
    4 optional string sHashSecretKey2; // or SK with sha 2 times, ascii format
};

/*
* The auth message client send
*/
struct BasicAuthPackage
{ 
    1 require string sObjName; 
    2 require string sAccessKey; // AK 
    3 require long iTime; // timestamp
    4 optional string sHashMethod = "sha1";

    // how to use sign
    // 1. tmpKey = md5sum(secret2 | timestamp); all know this 16bytes
    // 2. client use tmpKey to enc secret1, ie, the client knows secret
    // 3. server use tmpKey to dec secret1, then sha1(secret1) to check if ok
    5 optional string sSignature; 
};

enum AUTH_STATE
{
    AUTH_INIT = -127,
    AUTH_SUCC = 0,

    AUTH_PROTO_ERR = -100,
    AUTH_WRONG_OBJ = -101,
    AUTH_WRONG_AK = -102,
    AUTH_WRONG_TIME = -103, // wrong timestamp
    AUTH_NOT_SUPPORT_ENC = -104,
    AUTH_DEC_FAIL = -105, // may be wrong secret key
    AUTH_ERROR = -106,
    // other positive : user defined intermediate states
    // other negative : user defined failed states
};

enum AUTH_TYPE
{
    AUTH_TYPENONE = 0, // no auth
    AUTH_TYPELOCAL = 1, // local auth
};

};

